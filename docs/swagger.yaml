openapi: 3.0.3
info:
  title: xGoal Inference Service
  version: 1.0.0
  description: |
    FastAPI service exposing xGoal logistic regression inference endpoints.
servers:
  - url: http://localhost:8000

tags:
  - name: matches
    description: Match discovery and summaries
  - name: inference
    description: xG predictions and LLM explanations
  - name: shots
    description: Shot retrieval

paths:
  /matches:
    get:
      tags: [matches]
      summary: List matches available to the tutor UI
      operationId: listMatches
      responses:
        '501':
          description: Listing matches is not yet implemented

  /matches/{match_id}/lineups:
    get:
      tags: [matches]
      summary: Get starting lineups for a match
      operationId: getMatchLineups
      parameters:
        - name: match_id
          in: path
          required: true
          schema: { type: string }
      responses:
        '501':
          description: Match lineup retrieval is not yet implemented

  /matches/{match_id}/summary:
    post:
      tags: [matches]
      summary: Generate a tactical summary for a match
      operationId: generateMatchSummary
      parameters:
        - name: match_id
          in: path
          required: true
          schema: { type: string }
      responses:
        '501':
          description: Match summary generation is not yet implemented

  /matches/{match_id}/players/{player_id}/summary:
    post:
      tags: [matches]
      summary: Generate a tactical summary for a player within a match
      operationId: generateMatchPlayerSummary
      parameters:
        - name: match_id
          in: path
          required: true
          schema: { type: string }
        - name: player_id
          in: path
          required: true
          schema: { type: string }
      responses:
        '501':
          description: Match player summary generation is not yet implemented

  /predict_shots:
    post:
      tags: [inference]
      summary: Predict xG and explanation using the managed prompt
      operationId: predictShots
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShotPredictionRequest'
      responses:
        '200':
          description: Predictions and explanation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShotPredictionResponse'
        '400':
          description: At least one shot must be provided
        '502':
          description: Failed to retrieve a response from the LLM

  /predict_shots_with_prompt:
    post:
      tags: [inference]
      summary: Predict xG and explanation with a custom prompt override
      operationId: predictShotsWithPrompt
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShotPredictionWithPromptRequest'
      responses:
        '200':
          description: Predictions and explanation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShotPredictionResponse'
        '400':
          description: At least one shot must be provided
        '502':
          description: Failed to retrieve a response from the LLM

  /match/{match_id}/shots:
    get:
      tags: [matches]
      summary: Get cached shot predictions for a match
      operationId: getMatchShots
      parameters:
        - name: match_id
          in: path
          required: true
          schema: { type: string }
      responses:
        '200':
          description: Cached predictions for the match
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShotPredictionResponse'
        '404':
          description: No cached predictions for match

  /shots/{shot_id}:
    get:
      tags: [shots]
      summary: Get full detail for a specific shot
      operationId: getShotDetail
      parameters:
        - name: shot_id
          in: path
          required: true
          schema: { type: string }
      responses:
        '501':
          description: Shot detail retrieval is not yet implemented

components:
  schemas:
    ShotPredictionRequest:
      type: object
      required: [shots, model]
      properties:
        shots:
          type: array
          items:
            $ref: '#/components/schemas/ShotFeatures'
        model:
          $ref: '#/components/schemas/LogisticRegressionModel'
        llm_model:
          type: string
          nullable: true
          description: Optional override for the LLM model to use

    ShotPredictionWithPromptRequest:
      allOf:
        - $ref: '#/components/schemas/ShotPredictionRequest'
        - type: object
          required: [prompt]
          properties:
            prompt:
              type: string
              description: Custom prompt text to send to the language model

    ShotPredictionResponse:
      type: object
      required: [shots, explanation, llm_model]
      properties:
        shots:
          type: array
          items:
            $ref: '#/components/schemas/ShotPrediction'
        explanation:
          type: string
          description: Natural-language explanation returned by the language model
        llm_model:
          type: string
          description: Name of the model that produced the explanation

    ShotPrediction:
      type: object
      required: [xg, reason_codes]
      properties:
        shot_id:
          type: string
          nullable: true
        match_id:
          type: string
          nullable: true
        xg:
          type: number
          format: float
          description: Expected goal probability for the shot
        reason_codes:
          type: array
          items:
            $ref: '#/components/schemas/ReasonCode'

    ReasonCode:
      type: object
      required: [feature, value, coefficient, contribution]
      properties:
        feature: { type: string }
        value: { type: number, format: float }
        coefficient: { type: number, format: float }
        contribution: { type: number, format: float }

    LogisticRegressionModel:
      type: object
      required: [intercept, coefficients]
      properties:
        intercept:
          type: number
          format: float
          description: Intercept term of the logistic regression model
        coefficients:
          type: object
          additionalProperties:
            type: number
            format: float
          description: Mapping of feature names to coefficient values

    ShotFeatures:
      type: object
      required: [start_x, start_y]
      properties:
        shot_id:
          type: string
          nullable: true
          description: Identifier of the shot within the match or dataset
        match_id:
          type: string
          nullable: true
          description: Identifier of the match the shot belongs to
        start_x: { type: number, format: float }
        start_y: { type: number, format: float }
        is_set_piece: { type: boolean, default: false }
        is_corner: { type: boolean, default: false }
        is_free_kick: { type: boolean, default: false }
        first_time: { type: boolean, nullable: true }
        under_pressure: { type: boolean, nullable: true }
        body_part: { type: string, nullable: true }
        ff_keeper_x: { type: number, format: float, nullable: true }
        ff_keeper_y: { type: number, format: float, nullable: true }
        ff_opponents: { type: number, format: float, nullable: true }
        freeze_frame_available: { type: integer, nullable: true }
        ff_keeper_count: { type: integer, nullable: true }
        one_on_one: { type: boolean, nullable: true }
        open_goal: { type: boolean, nullable: true }
        follows_dribble: { type: boolean, nullable: true }
        deflected: { type: boolean, nullable: true }
        aerial_won: { type: boolean, nullable: true }
